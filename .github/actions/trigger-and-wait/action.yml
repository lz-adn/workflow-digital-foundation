name: 'Trigger Workflow and Wait'
description: 'This action triggers a workflow in another repository and waits for the result.'
author: 'Convictional'
branding:
  icon: 'arrow-right'
  color: 'yellow'
inputs:
  owner:
    description: "The owner of the repository where the workflow is contained."
    required: true
  repo:
    description: "The repository where the workflow is contained."
    required: true
  github_token:
    description: "The Github access token with access to the repository. It is recommended you put this token under secrets."
    required: true
  github_user:
    description: "The name of the github user whose access token is being used to trigger the workflow."
    required: false
  ref:
    description: 'The reference of the workflow run. The reference can be a branch, tag, or a commit SHA. Default: main'
    required: false
  wait_interval:
    description: "The number of seconds delay between checking for result of run."
    required: false
  workflow_file_name:
    description: "The reference point. For example, you could use main.yml."
    required: true
  client_payload:
    description: 'Payload to pass to the workflow, must be a JSON string'
    required: false
  propagate_failure:
    description: 'Fail current job if downstream job fails. default: true'
    required: false
  trigger_workflow:
    description: 'Trigger the specified workflow. default: true'
    required: false
  wait_workflow:
    description: 'Wait for workflow to finish. default: true'
    required: false
  comment_downstream_url:
    description: 'Comment API link for commenting the downstream job URL'
    required: false
    default: ''
  comment_github_token:
    description: "The Github access token with access to the repository for comment URL. It is recommended you put this token under secrets."
    required: false
    default: ${{ github.token }}
outputs:
  workflow_id:
    description: The ID of the workflow that was triggered by this action
  workflow_url:
    description: The URL of the workflow that was triggered by this action
  conclusion:
    description: Conclusion of the job, i.e pass/failure
runs:
  using: "composite"
  steps:
      - name: "set env vars"
        shell: sh
        run: |
            echo "INPUT_WAIT_INTERVAL=${{ inputs.wait_interval }}" >> $GITHUB_ENV
            echo "INPUT_PROPAGATE_FAILURE=${{ inputs.propagate_failure }}" >> $GITHUB_ENV
            echo "INPUT_TRIGGER_WORKFLOW=${{ inputs.trigger_workflow }}" >> $GITHUB_ENV
            echo "INPUT_WAIT_WORKFLOW=${{ inputs.wait_workflow }}" >> $GITHUB_ENV
            echo "INPUT_OWNER=${{ inputs.owner }}" >> $GITHUB_ENV
            echo "INPUT_REPO=${{ inputs.repo }}" >> $GITHUB_ENV
            echo "INPUT_GITHUB_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV
            echo "INPUT_WORKFLOW_FILE_NAME=${{ inputs.workflow_file_name }}" >> $GITHUB_ENV
            echo "INPUT_CLIENT_PAYLOAD=${{ inputs.client_payload }}" >> $GITHUB_ENV
            echo "INPUT_REF=${{ inputs.ref }}" >> $GITHUB_ENV
            echo "INPUT_COMMENT_DOWNSTREAM_URL=${{ inputs.comment_downstream_url }}" >> $GITHUB_ENV
            echo "INPUT_COMMENT_GITHUB_TOKEN=${{ inputs.comment_github_token }}" >> $GITHUB_ENV
            echo "INPUT_GITHUB_USER=${{ inputs.github_user }}" >> $GITHUB_ENV

      - name: "add missing dependencies"
        shell: sh
        run: |
          sudo apt update -y
          sudo apt --no-cache add curl jq coreutils

      - name: "give execution permission to script"
        shell: sh
        run: chmod 744 $GITHUB_ACTION_PATH/trigger-and-wait.sh

      - name: "run script"
        shell: sh
        run: sh $GITHUB_ACTION_PATH/trigger-and-wait.sh  
